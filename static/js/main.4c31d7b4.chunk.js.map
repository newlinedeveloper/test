{"version":3,"sources":["assets/recipe.jpg","assets/bi_polar.png","actions/index.js","globals.js","components/Brand/index.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchAllBrands","a","fetch","method","resObj","json","res","console","log","Meta","Layout","Content","Card","TextArea","Input","Search","CommentList","comments","dataSource","header","length","itemLayout","renderItem","props","Editor","onChange","onSubmit","submitting","value","Item","rows","htmlType","loading","onClick","type","Dashboard","state","userId","user","name","firstName","lastName","email","userArray","userArrayTemp","searchField","currentPage","totalUsers","selectedUser","pageLoading","slotModal","image","brandArray","brandArrayTemp","totalBrands","selectedBrand","brand","variety","style","country","stars","topTen","count","_getBrandsInfo","then","err","getUnique","setState","handleSearch","prevState","filter","Brand","toLowerCase","includes","Country","handleClear","e","target","showDrawer","visible","onClose","arr","index","map","i","final","indexOf","this","notification","success","message","placement","createSlotModal","centered","title","confirmLoading","marginTop","footer","onCancel","gutter","margin","className","span","for","placeholder","disabled","errName","category","label","content","marginLeft","offset","enterButton","SearchOutlined","size","allowClear","onSearch","grid","xs","sm","md","lg","xl","xxl","width","cover","alt","src","Recipe","height","actions","SettingOutlined","key","EditOutlined","Variety","Style","Stars","EllipsisOutlined","avatar","Logo","description","padding","imageStyle","fontWeight","bodyStyle","paddingBottom","textAlign","marginRight","defaultValue","Ribbon","text","class","handleChange","handleSubmit","current","total","Component","Routes","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4c31d7b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/recipe.293ad911.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bi_polar.e06ab775.png\";","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY,USER_URI,FOOD_URI,BRAND_URI } from \"../globals\";\n\n\nexport const fetchAllUsers = async (pageId) => {\n  try {\n    const resObj = await fetch(USER_URI + `/api/users/?page=${pageId}`, {\n      method: \"get\",\n    });\n\n    const res = await resObj.json();\n    console.log(res.data)\n    return res;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\nexport const fetchAllFoods = async () => {\n  try {\n    const resObj = await fetch(FOOD_URI + `/recipe`, {\n      method: \"get\",\n    });\n\n    const res = await resObj.json();\n    return res;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const fetchAllBrands = async () => {\n  try {\n    const resObj = await fetch(BRAND_URI , {\n      method: \"get\",\n    });\n\n    const res = await resObj.json();\n    return res;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n","// let context = \"TEST\"; //TEST (for testing) and PROD (for Production)\nexport const SERVER_URI = \"http://localhost:8000/api\";\nexport const USER_URI = \"https://reqres.in\";\nexport const FOOD_URI = \"http://starlord.hackerearth.com\";\nexport const BRAND_URI = \"http://starlord.hackerearth.com/TopRamen\";\n\n  // context === \"PROD\"\n  //   ? \"\"\n  //   : window.location.hostname === \"localhost\"\n  //   ? \"http://localhost:8000/api\"\n  //   : \"https://residential-portal.herokuapp.com:8000/api\";\nexport const APP_KEY =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjZGZuIiwibmFtZSI6ImNsb3VkREZOIEVuZHBvaW50IiwiaWF0IjoxNTE2MjM5MDIyfQ.u7K0eXq9XhDkvW-SgC-neczEk6u2sOERJJZ59ygSpxw\";\n","import React, { Component } from 'react'\nimport { \n    Layout, Card, Avatar,notification,Button, Input,DatePicker,Tooltip,TimePicker,Modal,Badge,Statistic,Divider,\n    Comment, Form,List,Rate,Drawer,Skeleton,Empty,Pagination, Row, Col,Descriptions\n} from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined,LikeOutlined,CoffeeOutlined,HeartOutlined,SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\n\n  import { fetchAllUsers,fetchAllBrands } from \"../../actions\";\n  \nimport Logo from \"./../../assets/bi_polar.png\";\nimport Recipe from \"./../../assets/recipe.jpg\";\n// import { Modal } from \"react-bootstrap\";\n\nconst { Content } = Layout;\nconst { Meta } = Card;\nconst { TextArea,Search } = Input;\n\n\n\n\n\nconst CommentList = ({ comments }) => (\n    <List\n      dataSource={comments}\n      header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n      itemLayout=\"horizontal\"\n      renderItem={props => <Comment {...props} />}\n    />\n  );\n  \n  const Editor = ({ onChange, onSubmit, submitting, value }) => (\n    <>\n      <Form.Item>\n        <TextArea rows={4} onChange={onChange} value={value} />\n      </Form.Item>\n      <Form.Item>\n        <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n          Add Comment\n        </Button>\n      </Form.Item>\n    </>\n  );\n\n\n\nclass Dashboard extends Component {\n\n    state = {\n\n        userId: \"\",\n        user: null,\n        name: \"\",\n        firstName: \"\",\n        lastName:\"\",\n        email: \"\",\n        userArray : [],\n        userArrayTemp:[],\n        searchField: \"\",\n        currentPage: 1,\n        totalUsers: 0,\n        selectedUser: null,\n        pageLoading: false,\n        slotModal: false,\n        image : \"\",\n        comments: [],\n        submitting: false,\n        value: '',\n        brandArray : [],\n        brandArrayTemp : [],\n        totalBrands: 0,\n        selectedBrand: null,\n        brand : \"\",\n        variety : \"\",\n        style: \"\",\n        country: \"\",\n        stars: 0,\n        topTen : \"\",\n        count : 1,\n        \n    }\n\n    componentDidMount() {\n       \n        \n        this._getBrandsInfo();\n        notification.success({\n            message: \"Welcome!!!!\",\n            placement: \"bottomRight\",\n            });\n        }\n\n      _getBrandsInfo = () => {\n        let usersDetails = fetchAllBrands();\n        usersDetails.then((res, err) => {\n          if (err) console.log(err);\n          else {\n            res = this.getUnique(res,\"Brand\")\n            console.log(res.length)\n            this.setState(\n              { \n  \n                brandArray: res,\n                brandArrayTemp: res,\n                totalBrands: res.length\n               },\n            );\n          }\n        });\n      }\n    \n\n          handleSearch = (value) => {\n            this.setState({ \n              brandArray : this.state.brandArrayTemp,\n              searchField : value\n             }, () => {\n                this.setState((prevState) => (\n                  {\n                    brandArray : prevState.brandArray.filter((brand) => {\n                    if(brand.Brand.toLowerCase().includes(value.toLowerCase()) || brand.Country.toLowerCase().includes(value.toLowerCase())) {\n                      return brand\n                    }\n                  })\n                }))\n              });\n          }\n        \n          handleClear = (e) => {\n            if(e.target.value === '' ) {\n              this.setState(\n                {\n                  searchField: \"\",\n                  //  userArray : this.state.userArrayTemp\n                  brandArray:[]\n                });\n                this._getBrandsInfo();\n            }\n          };\n\n          showDrawer = () => {\n            this.setState({\n              visible: true,\n            });\n          };\n        \n          onClose = () => {\n            this.setState({\n              visible: false,\n            });\n          };\n\n          getUnique = (arr, index) => {\n\n            const unique = arr\n                 .map(e => e[index])\n          \n                 // store the keys of the unique objects\n                 .map((e, i, final) => final.indexOf(e) === i && i)\n          \n                 // eliminate the dead keys & store unique objects\n                .filter(e => arr[e]).map(e => arr[e]);      \n          \n             return unique;\n          }\n\n\n\n\n    render() {\n\n      const { comments, submitting, value } = this.state;\n\n          let createSlotModal = (\n            <Modal\n                centered\n                title={this.state.brand}\n                visible={this.state.slotModal}\n                confirmLoading=\"true\"\n                style={{marginTop: 80}}\n                footer={[\n                <Button\n                    onClick={(e) => {\n                    this.setState({ slotModal: false });\n                    }}\n                >\n                    Cancel\n                </Button>,\n                <Button \n                    type=\"primary\"\n                    onClick={(e) => {\n                        notification.success({\n                            message: \"Ordered Successfully\",\n                            placement: \"bottomRight\",\n                          });\n                        this.setState({ slotModal: false });\n                    }}\n                >\n                    Order Now\n                </Button>,\n                ]}\n                onCancel={(e) => {\n                this.setState({slotModal: false });\n                }}\n            >\n            <Row gutter={24} style={{margin: 5}}>\n\n                <Col className=\"gutter-row\" span={24}>\n                    <div className=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={this.state.brand}\n                        disabled\n                        onChange={(e) =>\n                            this.setState({\n                            name: e.target.value,\n                            errName: e.target.value !== \"\" ? false : true,\n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n            </Row>\n            <Row gutter={24} style={{margin: 5}}>\n\n                <Col className=\"gutter-row\" span={24}>\n                    <div className=\"form-group\">\n                        <label for=\"name\">Variety</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={this.state.variety}\n                        disabled\n                        onChange={(e) =>\n                            this.setState({\n                            name: e.target.value,\n                            errName: e.target.value !== \"\" ? false : true,\n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n            </Row>\n            <Row gutter={24} style={{margin: 5}}>\n                <Col className=\"gutter-row\" span={12}>\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Style</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Category\"\n                        disabled\n                        value={this.state.style}\n                        onChange={(e) =>\n                            this.setState({\n                            category: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n                <Col className=\"gutter-row\" span={12}>\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Country</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Label\"\n                        disabled\n                        value={this.state.country}\n                        onChange={(e) =>\n                            this.setState({\n                            label: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n\n\n            </Row>\n            <Row gutter={24} style={{margin: 5}}>\n                <Col className=\"gutter-row\" span={12}>\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Stars</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Category\"\n                        disabled\n                        value={this.state.stars}\n                        onChange={(e) =>\n                            this.setState({\n                            category: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n                <Col className=\"gutter-row\" span={12}>\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Top Ten</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Top Ten\"\n                        disabled\n                        value={this.state.label}\n                        onChange={(e) =>\n                            this.setState({\n                            label: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </Col>\n          </Row>\n            <Row gutter={24} style={{margin: 5}}>\n                <Col className=\"gutter-row\" span={8}>\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Count</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"count\"\n                        value={this.state.count}\n                        onChange={(e) =>\n                            this.setState({\n                                count: e.target.value,\n                        })\n                        }\n                        />\n                    </div>\n                </Col>\n\n\n            </Row>\n            </Modal>\n          );\n\n\n\n\n          let content = (\n            <div style={{marginLeft: 20}}>\n                <Row>\n                    <Col span={6} offset={18}>\n                        <Search\n                            placeholder='Search'\n                            enterButton={<SearchOutlined/>}\n                            size=\"medium\"\n                            allowClear\n                            onChange={this.handleClear}\n                            onSearch={this.handleSearch}\n                            // style={{ width: 250}}\n                        /> \n                    </Col>\n                </Row>\n\n                    <List\n                        grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 3,\n                            lg: 4,\n                            xl: 4,\n                            xxl: 4,\n                          }}\n                          style = {{marginTop : 20}}\n                        dataSource={this.state.brandArray}\n                        renderItem={brand => (\n                            <List.Item>\n                            {/* <div className=\"col-md-4\" style={{marginTop: 5 }}> */}\n                                <Card\n                                    style={{ width: 300 }}\n                                    cover={\n                                    <img\n                                        alt=\"food\"\n                                        src= {Recipe}\n                                        style = {{ width : \"100%\" , height: \"175px\" }}\n                                    />\n                                    }\n                                    actions={[\n                                        <Tooltip title=\"settings\">\n                                        <SettingOutlined key=\"setting\" />\n                                        </Tooltip>,\n                                        <Tooltip title=\"Order\">\n                                        <EditOutlined\n                                            key=\"order\"\n                                            onClick={() => {\n                                            this.setState({\n                                                slotModal: true,\n                                                brand : brand.Brand,\n                                                variety : brand.Variety,\n                                                style: brand.Style,\n                                                country: brand.Country,\n                                                stars: brand.Stars,\n\n                                            });\n                                        }}\n                                        />\n                                        </Tooltip>,\n                                        <Tooltip title=\"View\">\n                                        <EllipsisOutlined \n                                            key=\"ellipsis\"\n                                            onClick={() => {\n                                            this.setState({\n                                                visible: true,\n                                                brand : brand.Brand,\n                                                variety : brand.Variety,\n                                                style: brand.Style,\n                                                country: brand.Country,\n                                                stars: brand.Stars,\n                                            });\n                                        }}\n                                         />\n                                        </Tooltip>,\n                                    ]}\n                                >\n                                    <Meta\n                                    avatar={<Avatar src={Logo} alt=\"Logo\" />}\n                                    title={brand.Brand}\n                                    description={brand.Variety}\n                                    />\n                                </Card>\n                            {/* </div> */}\n                            </List.Item>\n\n                            // </div>\n                        )}\n                    />\n            </div>\n          );\n\n\n        return (\n            \n            <div style={{ padding: \"2%\" }}>\n                {createSlotModal}\n                    { this.state.brandArray.length > 0 ? (\n                        content\n                        ) : (\n                        <Empty\n                            imageStyle={{\n                            height: 300,\n                            }}\n                            description={<h2 style={{ fontWeight: \"200\" }}>No Brands yet!</h2>}\n                        >\n                        </Empty>\n                        )}\n                        <Drawer\n                    title={this.state.Brand}\n                    width={900}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    bodyStyle={{ paddingBottom: 80 }}\n                    footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                        >\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button \n                        onClick={(e) => {\n                            this.setState({\n                                visible: false,\n                                slotModal: true\n                                });\n                            }} \n                            type=\"primary\">\n                            Order Now\n                        </Button>\n                    </div>\n                    }\n                    >\n                    <div className=\"row\" style={{marginTop: 50}}>\n                    <div className=\"col-md-6\" style={{marginTop: 5 }}>\n                        <img\n                            alt=\"food\"\n                            src= {Recipe}\n                            style = {{ width : \"75%\",height: \"200px\"}}\n                        />\n                        <Divider />\n                        <h5>Descriptions: </h5>\n                        <div>\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged\n                        </div>\n\n                        <Divider />\n                        <h5>Details : </h5>\n                        <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages.\n                        </div>\n\n                    </div>\n                    <div \n                        className=\"col-md-6\"\n                         style={{\n                            marginTop: 5,\n                            textAlign: \"right\"\n                            \n                         }}>\n                        <h2>{this.state.brand}</h2>\n                        <p>\n                            <Rate disabled defaultValue={this.state.stars} />\n                        </p>\n\n                        <p>Variety</p>\n                        <h6>\n                            {this.state.variety}\n                        </h6>\n\n                        <div className=\"row\" style={{marginTop: 30}}>\n                            <div className=\"col-sm-6\">\n                            <Badge.Ribbon text=\"Style\">\n                              <Card style={{padding : 10}}>\n                              <Meta\n                                title={this.state.style}\n                                />\n                                \n                              </Card>\n                            </Badge.Ribbon>\n                                \n                            </div>\n                            <div className=\"col-sm-6\">\n                            <Badge.Ribbon text=\"Country\">\n                            <Card style={{padding : 10}}>\n                              <Meta\n                                title={this.state.country}\n                                />\n                                \n                              </Card>\n                            </Badge.Ribbon>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n\n                        </div>\n                        <Divider />\n\n                         <div className=\"row\">\n                             <div className=\"col-sm-12\">\n                             {comments.length > 0 && <CommentList comments={comments} />}\n                                <Comment\n                                avatar={\n                                    <Avatar\n                                    src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                                    alt=\"Han Solo\"\n                                    />\n                                }\n                                content={\n                                    <Editor\n                                    onChange={this.handleChange}\n                                    onSubmit={this.handleSubmit}\n                                    submitting={submitting}\n                                    value={value}\n                                    />\n                                }\n                                />\n                             </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                    </Drawer>\n                    <div style={{ textAlign: \"center\" }}>\n                        <Pagination\n                            current={1}\n                            total={this.state.totalBrands}\n                        />\n                    </div>\n                    \n            \n            </div>\n        )\n    }\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n// import Home from \"./Home\"\n// import Recipe from \"./Recipe\"\nimport Dashboard from \"./Brand\"\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  let loggedIn = JSON.parse(localStorage.getItem(\"user\"));\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loggedIn && loggedIn.token && loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};\n\nclass Routes extends Component {\n  render() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" component={Dashboard} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                {/* <Route path=\"/users\" component={Home} />\n                <Route path=\"/recipes\" component={Recipe} /> */}\n            </Switch>\n        </Router>\n      \n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./components/Routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n// import \"./App.css\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n        <Routes />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}